{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work6\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\nimport TableSearch from './TableSearch/TableSearch';\nimport AddElement from './AddElement/AddElement';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      search: '',\n      sort: 'asc',\n      sortField: 'id',\n      // поле по умолчанию\n      row: null,\n      currentPage: 0\n    };\n\n    this.onSort = sortField => {\n      const cloneData = this.state.data.concat();\n      const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const data = _.orderBy(cloneData, sortField, sort);\n\n      this.setState({\n        data,\n        sort,\n        sortField\n      });\n    };\n\n    this.onRowSelect = row => this.setState({\n      row: row\n    });\n\n    this.modeSelectHandler = url => {\n      // console.log(url)\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n\n    this.pageChangeHandler = ({\n      selected\n    }) => this.setState({\n      currentPage: selected\n    });\n\n    this.searchHandler = search => this.setState({\n      search,\n      currentPage: 0\n    });\n\n    this.addElem = addEl => {\n      debugger;\n      console.log(addEl);\n      const cloneData = this.state.data.concat();\n      this.state.data.unshift(this.state.data[0]);\n      this.setState({\n        data: newData\n      });\n      this.state.data.map(item => console.log(item.firstName));\n      console.log(this.state.data);\n    };\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  getFilteredData() {\n    debugger;\n    const {\n      data,\n      search\n    } = this.state;\n\n    if (!search) {\n      return data;\n    }\n\n    var result = data.filter(item => {\n      return item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) || item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) || item[\"email\"].toLowerCase().includes(search.toLowerCase());\n    });\n\n    if (!result.length) {\n      result = this.state.data;\n    }\n\n    return result;\n  }\n\n  render() {\n    debugger;\n    const pageSize = 50;\n    const filteredData = this.getFilteredData();\n\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n\n    const pageCount = Math.ceil(filteredData.length / pageSize);\n\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModeSelector, {\n        onSelect: this.modeSelectHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableSearch, {\n      onSearch: this.searchHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AddElement, {\n      addElem: this.addElem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      data: displayData,\n      onSort: this.onSort,\n      sort: this.state.sort,\n      sortField: this.state.sortField,\n      onRowSelect: this.onRowSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })), this.state.data.length > pageSize ? /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: '<',\n      nextLabel: '>',\n      breakLabel: '...',\n      breakClassName: 'break-me',\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.pageChangeHandler,\n      containerClassName: 'pagination',\n      activeClassName: 'active',\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      nextClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextLinkClassName: \"page-link\" //forcePage={this.state.currentPage}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }) : null, this.state.row ? /*#__PURE__*/React.createElement(DetailRowView, {\n      person: this.state.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 26\n      }\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work6/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","DetailRowView","ModeSelector","ReactPaginate","TableSearch","AddElement","App","state","isModeSelected","isLoading","data","search","sort","sortField","row","currentPage","onSort","cloneData","concat","orderBy","setState","onRowSelect","modeSelectHandler","url","fetchData","pageChangeHandler","selected","searchHandler","addElem","addEl","console","log","unshift","newData","map","item","firstName","response","fetch","json","getFilteredData","result","filter","toLowerCase","includes","length","render","pageSize","filteredData","displayData","chunk","pageCount","Math","ceil"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\nimport TableSearch from './TableSearch/TableSearch';\nimport AddElement from './AddElement/AddElement';\n\nclass App extends Component {\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    search: '',\n    sort: 'asc',\n    sortField: 'id', // поле по умолчанию\n    row: null,\n    currentPage: 0,\n  }\n\n\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json()\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    })\n  }\n\n  onSort = sortField => {\n    \n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const data = _.orderBy(cloneData, sortField, sort);\n\n    this.setState({ data, sort, sortField})\n  }\n\n  onRowSelect = row => (\n    this.setState({row: row})\n  )\n\n  modeSelectHandler = url => {\n    // console.log(url)\n    this.setState({\n      isModeSelected: true,\n      isLoading: true,\n    })\n    this.fetchData(url)\n  }\n\n  pageChangeHandler = ({selected}) => (\n    this.setState({currentPage: selected})\n  )\n\n  searchHandler = search => (\n    this.setState({search, currentPage: 0})\n  )\n\n  getFilteredData(){\n    debugger\n    const {data, search} = this.state\n\n    if (!search) {\n      return data\n    }\n    var result = data.filter(item => {\n      return item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n        item[\"email\"].toLowerCase().includes(search.toLowerCase())\n      \n    });\n    if(!result.length){\n      result = this.state.data\n    }\n    return result\n  }\n\n  addElem = addEl =>{\n    debugger\n    console.log(addEl);\n    const cloneData = this.state.data.concat();\n    this.state.data.unshift(this.state.data[0]);\n    this.setState({data: newData})\n\n    this.state.data.map(item => (console.log(item.firstName)));\n\n    console.log(this.state.data);\n  }\n\n  render() {\n    debugger\n    const pageSize = 50;\n    const filteredData = this.getFilteredData()\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n    const pageCount = Math.ceil(filteredData.length / pageSize)\n    if(!this.state.isModeSelected){\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler} />\n        </div>\n      )\n    }\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <React.Fragment>\n            <TableSearch onSearch={this.searchHandler} />\n            <AddElement addElem={this.addElem} />\n            <Table \n              data={displayData}\n              onSort={this.onSort}\n              sort={this.state.sort}\n              sortField={this.state.sortField}\n              onRowSelect={this.onRowSelect}\n            />\n          </React.Fragment>\n      }\n      {\n        this.state.data.length > pageSize\n        ? <ReactPaginate\n        previousLabel={'<'}\n        nextLabel={'>'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={this.pageChangeHandler}\n        containerClassName={'pagination'}\n        activeClassName={'active'}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextLinkClassName=\"page-link\"\n        //forcePage={this.state.currentPage}\n        /> : null\n      }\n      {\n        this.state.row ? <DetailRowView person={this.state.row} /> : null\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
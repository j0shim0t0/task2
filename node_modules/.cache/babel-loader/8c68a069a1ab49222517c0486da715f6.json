{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work6\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport TableSearch from './TableSearch/TableSearch';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      search: '',\n      sort: 'asc',\n      // 'desc'\n      sortField: 'id',\n      row: null,\n      currentPage: 0\n    };\n\n    this.onSort = sortField => {\n      const cloneData = this.state.data.concat();\n      const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const data = _.orderBy(cloneData, sortField, sort);\n\n      this.setState({\n        data,\n        sort,\n        sortField\n      });\n    };\n\n    this.modeSelectHandler = url => {\n      // console.log(url)\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n\n    this.onRowSelect = row => this.setState({\n      row\n    });\n\n    this.pageChangeHandler = ({\n      selected\n    }) => this.setState({\n      currentPage: selected\n    });\n\n    this.searchHandler = search => {\n      this.setState({\n        search,\n        currentPage: 0\n      });\n    };\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  getFilteredData() {\n    const {\n      data,\n      search\n    } = this.state;\n\n    if (!search) {\n      return data;\n    }\n\n    var result = data.filter(item => {\n      return item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) || item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) || item[\"email\"].toLowerCase().includes(search.toLowerCase());\n    });\n\n    if (!result.length) {\n      result = this.state.data;\n    }\n\n    return result;\n  }\n\n  render() {\n    const pageSize = 50;\n\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModeSelector, {\n        onSelect: this.modeSelectHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    const filteredData = this.getFilteredData(); // debugger\n\n    const pageCount = Math.ceil(filteredData.length / pageSize);\n\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableSearch, {\n      onSearch: this.searchHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      data: displayData,\n      onSort: this.onSort,\n      sort: this.state.sort,\n      sortField: this.state.sortField,\n      onRowSelect: this.onRowSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })), this.state.data.length > pageSize ? /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: '<',\n      nextLabel: '>',\n      breakLabel: '...',\n      breakClassName: 'break-me',\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.pageChangeHandler,\n      containerClassName: 'pagination',\n      activeClassName: 'active',\n      pageClassName: \"page-item\",\n      pageLinkClassName: \"page-link\",\n      previousClassName: \"page-item\",\n      nextClassName: \"page-item\",\n      previousLinkClassName: \"page-link\",\n      nextLinkClassName: \"page-link\",\n      forcePage: this.state.currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }) : null, this.state.row ? /*#__PURE__*/React.createElement(DetailRowView, {\n      person: this.state.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 26\n      }\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work6/my-app/src/App.js"],"names":["React","Component","ReactPaginate","Loader","Table","DetailRowView","ModeSelector","TableSearch","_","App","state","isModeSelected","isLoading","data","search","sort","sortField","row","currentPage","onSort","cloneData","concat","orderBy","setState","modeSelectHandler","url","fetchData","onRowSelect","pageChangeHandler","selected","searchHandler","response","fetch","json","getFilteredData","result","filter","item","toLowerCase","includes","length","render","pageSize","filteredData","pageCount","Math","ceil","displayData","chunk"],"mappings":"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","sourcesContent":["  \nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport TableSearch from './TableSearch/TableSearch';\nimport _ from 'lodash';\n\n\nclass App extends Component {\n  state ={\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    search: '',\n    sort: 'asc',  // 'desc'\n    sortField: 'id',\n    row: null,\n    currentPage: 0,\n  }\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json()\n   \n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    })\n\n  }\n  onSort = sortField => {\n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const data = _.orderBy(cloneData, sortField, sort);\n    this.setState({ data, sort, sortField })\n  }\n\n  modeSelectHandler = url => {\n    // console.log(url)\n    this.setState({\n      isModeSelected: true,\n      isLoading: true,\n    })\n    this.fetchData(url)\n  }\n\n  \n  onRowSelect = row => (\n    this.setState({row})\n  )\n\n  pageChangeHandler = ({selected}) => (\n    this.setState({currentPage: selected})\n  )\n\n  searchHandler = search => {\n    this.setState({search, currentPage: 0})\n  }\n\n  getFilteredData(){\n    const {data, search} = this.state\n\n    if (!search) {\n      return data\n    }\n   var result = data.filter(item => {\n     return (\n       item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n       item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n       item[\"email\"].toLowerCase().includes(search.toLowerCase())\n     );\n   });\n   if(!result.length){\n     result = this.state.data\n   }\n    return result\n  }\n\n  render() {\n    const pageSize = 50;\n    if(!this.state.isModeSelected){\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler}/>\n        </div>\n      )\n    }\n   \n    const filteredData = this.getFilteredData();\n    // debugger\n    const pageCount = Math.ceil(filteredData.length / pageSize)\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage]\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <React.Fragment>\n            <TableSearch onSearch={this.searchHandler}/>\n            <Table \n              data={displayData}\n              onSort={this.onSort}\n              sort={this.state.sort}\n              sortField={this.state.sortField}\n              onRowSelect={this.onRowSelect}\n            />\n          </React.Fragment>\n\n      }\n\n      {\n        this.state.data.length > pageSize\n        ? <ReactPaginate\n        previousLabel={'<'}\n        nextLabel={'>'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={this.pageChangeHandler}\n        containerClassName={'pagination'}\n        activeClassName={'active'}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextLinkClassName=\"page-link\"\n        forcePage={this.state.currentPage}\n      /> : null\n      }\n\n      {\n        this.state.row ? <DetailRowView person={this.state.row} /> : null\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work6\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      sort: 'asc',\n      sortField: 'id',\n      // поле по умолчанию\n      row: null\n    };\n\n    this.onSort = sortField => {\n      const cloneData = this.state.data.concat();\n      const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const data = _.orderBy(cloneData, sortField, sort);\n\n      this.setState({\n        data,\n        sort,\n        sortField\n      });\n    };\n\n    this.onRowSelect = row => this.setState({\n      row: row\n    });\n\n    this.modeSelectHandler = url => {\n      // console.log(url)\n      this.setState({\n        isModeSelected: true,\n        isLoading: true\n      });\n      this.fetchData(url);\n    };\n\n    this.pageChangeHandler = page => console.log(page);\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  render() {\n    const pageSize = 50;\n\n    if (!this.state.isModeSelected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModeSelector, {\n        onSelect: this.modeSelectHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Table, {\n      data: this.state.data,\n      onSort: this.onSort,\n      sort: this.state.sort,\n      sortField: this.state.sortField,\n      onRowSelect: this.onRowSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: 'previous',\n      nextLabel: 'next',\n      breakLabel: '...',\n      breakClassName: 'break-me',\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.pageChangeHandler,\n      containerClassName: 'pagination',\n      subContainerClassName: 'pages pagination',\n      activeClassName: 'active',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), this.state.row ? /*#__PURE__*/React.createElement(DetailRowView, {\n      person: this.state.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work6/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","DetailRowView","ModeSelector","ReactPaginate","App","state","isModeSelected","isLoading","data","sort","sortField","row","onSort","cloneData","concat","orderBy","setState","onRowSelect","modeSelectHandler","url","fetchData","pageChangeHandler","page","console","log","response","fetch","json","render","pageSize","pageCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport ReactPaginate from 'react-paginate';\n\nclass App extends Component {\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    sort: 'asc',\n    sortField: 'id', // поле по умолчанию\n    row: null,\n  }\n\n\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json()\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    })\n  }\n\n  onSort = sortField => {\n    \n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const data = _.orderBy(cloneData, sortField, sort);\n\n    this.setState({ data, sort, sortField})\n  }\n\n  onRowSelect = row => (\n    this.setState({row: row})\n  )\n\n  modeSelectHandler = url => {\n    // console.log(url)\n    this.setState({\n      isModeSelected: true,\n      isLoading: true,\n    })\n    this.fetchData(url)\n  }\n\n  pageChangeHandler = page => (\n    console.log(page)\n  )\n\n  render() {\n    const pageSize = 50;\n    if(!this.state.isModeSelected){\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler} />\n        </div>\n      )\n    }\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <Table \n        data={this.state.data}\n        onSort={this.onSort}\n        sort={this.state.sort}\n        sortField={this.state.sortField}\n        onRowSelect={this.onRowSelect}\n        />\n      }\n      {\n        <ReactPaginate\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={this.state.pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.pageChangeHandler}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          activeClassName={'active'}\n        />\n      }\n      {\n        this.state.row ? <DetailRowView person={this.state.row} /> : null\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
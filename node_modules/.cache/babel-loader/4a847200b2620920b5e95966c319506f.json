{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work6\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      data: [],\n      sort: 'asc',\n      sortField: 'id' // поле по умолчанию\n\n    };\n\n    this.onSort = sortField => {\n      const cloneData = this.state.data.concat();\n      const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const orderedData = _.orderBy(cloneData, sortField, sortType);\n\n      this.setState({\n        data: orderedData,\n        sort: sortType,\n        sortField: sortField\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Table, {\n      data: this.state.data,\n      onSort: this.onSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work6/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","App","state","isLoading","data","sort","sortField","onSort","cloneData","concat","sortType","orderedData","orderBy","setState","componentDidMount","response","fetch","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,IAAI,EAAE,KAHA;AAINC,MAAAA,SAAS,EAAE,IAJL,CAIW;;AAJX,KADkB;;AAAA,SAkB1BC,MAlB0B,GAkBjBD,SAAS,IAAI;AAEpB,YAAME,SAAS,GAAG,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,MAAhB,EAAlB;AACA,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWG,IAAX,KAAoB,KAApB,GAA4B,MAA5B,GAAqC,KAAtD;;AACA,YAAMM,WAAW,GAAGX,CAAC,CAACY,OAAF,CAAUJ,SAAV,EAAqBF,SAArB,EAAgCI,QAAhC,CAApB;;AAEA,WAAKG,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEO,WADM;AAEZN,QAAAA,IAAI,EAAEK,QAFM;AAGZJ,QAAAA,SAAS,EAAEA;AAHC,OAAd;AAKD,KA7ByB;AAAA;;AAS1B,QAAMQ,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wLAAF,CAA5B;AACA,UAAMZ,IAAI,GAAG,MAAMW,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAKJ,QAAL,CAAc;AACZV,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEA;AAFM,KAAd;AAID;;AAeDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKhB,KAAL,CAAWC,SAAX,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE,oBAAC,KAAD;AACF,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IADf;AAEF,MAAA,MAAM,EAAE,KAAKG,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AAYD;;AA5CyB;;AA+C5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    data: [],\n    sort: 'asc',\n    sortField: 'id', // поле по умолчанию\n  }\n\n\n  async componentDidMount() {\n    const response = await fetch(` http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`)\n    const data = await response.json()\n    this.setState({\n      isLoading: false,\n      data: data\n    })\n  }\n\n  onSort = sortField => {\n    \n    const cloneData = this.state.data.concat();\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const orderedData = _.orderBy(cloneData, sortField, sortType);\n\n    this.setState({\n      data: orderedData,\n      sort: sortType,\n      sortField: sortField\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <Table \n        data={this.state.data}\n        onSort={this.onSort}\n        />\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joshimoto\\\\Desktop\\\\Work6\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModeSelected: false,\n      isLoading: false,\n      data: [],\n      sort: 'asc',\n      sortField: 'id',\n      // поле по умолчанию\n      row: null\n    };\n\n    this.onSort = sortField => {\n      const cloneData = this.state.data.concat();\n      const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const orderedData = _.orderBy(cloneData, sortField, sortType);\n\n      this.setState({\n        data: orderedData,\n        sort: sortType,\n        sortField: sortField\n      });\n    };\n\n    this.onRowSelect = row => this.setState({\n      row: row\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`);\n    const data = await response.json();\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Table, {\n      data: this.state.data,\n      onSort: this.onSort,\n      sort: this.state.sort,\n      sortField: this.state.sortField,\n      onRowSelect: this.onRowSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), this.state.row ? /*#__PURE__*/React.createElement(DetailRowView, {\n      person: this.state.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Joshimoto/Desktop/Work6/my-app/src/App.js"],"names":["React","Component","Loader","Table","_","DetailRowView","App","state","isModeSelected","isLoading","data","sort","sortField","row","onSort","cloneData","concat","sortType","orderedData","orderBy","setState","onRowSelect","componentDidMount","response","fetch","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,cAAc,EAAE,KADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,IAAI,EAAE,KAJA;AAKNC,MAAAA,SAAS,EAAE,IALL;AAKW;AACjBC,MAAAA,GAAG,EAAE;AANC,KADkB;;AAAA,SAoB1BC,MApB0B,GAoBjBF,SAAS,IAAI;AAEpB,YAAMG,SAAS,GAAG,KAAKR,KAAL,CAAWG,IAAX,CAAgBM,MAAhB,EAAlB;AACA,YAAMC,QAAQ,GAAG,KAAKV,KAAL,CAAWI,IAAX,KAAoB,KAApB,GAA4B,MAA5B,GAAqC,KAAtD;;AACA,YAAMO,WAAW,GAAGd,CAAC,CAACe,OAAF,CAAUJ,SAAV,EAAqBH,SAArB,EAAgCK,QAAhC,CAApB;;AAEA,WAAKG,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAEQ,WADM;AAEZP,QAAAA,IAAI,EAAEM,QAFM;AAGZL,QAAAA,SAAS,EAAEA;AAHC,OAAd;AAKD,KA/ByB;;AAAA,SAiC1BS,WAjC0B,GAiCZR,GAAG,IACf,KAAKO,QAAL,CAAc;AAACP,MAAAA,GAAG,EAAEA;AAAN,KAAd,CAlCwB;AAAA;;AAW1B,QAAMS,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wLAAF,CAA5B;AACA,UAAMd,IAAI,GAAG,MAAMa,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAKL,QAAL,CAAc;AACZX,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEN,CAAC,CAACe,OAAF,CAAUT,IAAV,EAAgB,KAAKH,KAAL,CAAWK,SAA3B,EAAsC,KAAKL,KAAL,CAAWI,IAAjD;AAFM,KAAd;AAID;;AAmBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKnB,KAAL,CAAWE,SAAX,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE,oBAAC,KAAD;AACF,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IADf;AAEF,MAAA,MAAM,EAAE,KAAKI,MAFX;AAGF,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWI,IAHf;AAIF,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,SAJpB;AAKF,MAAA,WAAW,EAAE,KAAKS,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAaE,KAAKd,KAAL,CAAWM,GAAX,gBAAiB,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,GAA6D,IAb/D,CADF;AAkBD;;AAxDyB;;AA2D5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport _ from 'lodash';\nimport DetailRowView from './DetailRowView/DetailRowView';\n\nclass App extends Component {\n  state = {\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    sort: 'asc',\n    sortField: 'id', // поле по умолчанию\n    row: null,\n  }\n\n\n  async componentDidMount() {\n    const response = await fetch(` http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`)\n    const data = await response.json()\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    })\n  }\n\n  onSort = sortField => {\n    \n    const cloneData = this.state.data.concat();\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const orderedData = _.orderBy(cloneData, sortField, sortType);\n\n    this.setState({\n      data: orderedData,\n      sort: sortType,\n      sortField: sortField\n    })\n  }\n\n  onRowSelect = row => (\n    this.setState({row: row})\n  )\n\n  render() {\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <Table \n        data={this.state.data}\n        onSort={this.onSort}\n        sort={this.state.sort}\n        sortField={this.state.sortField}\n        onRowSelect={this.onRowSelect}\n        />\n      }\n      {\n        this.state.row ? <DetailRowView person={this.state.row} /> : null\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}